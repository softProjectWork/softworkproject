final String content = param.toString();
            //将客户端包装的JSON数据发送到服务器
            new AsyncTask<Void, Void, String>() {
                @Override
                protected String doInBackground(Void... params) {
                    String strUrl = "162.105.175.115/backend/clientCall/login.php";
                    URL url = null;
                    try {
                        url = new URL(strUrl);
                    } catch (MalformedURLException e) {
                        e.printStackTrace();
                    }
                    HttpURLConnection urlConn = null;
                    try {
                        assert url != null;
                        urlConn = (HttpURLConnection) url.openConnection();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    try {
                        assert urlConn != null;
                        urlConn.setConnectTimeout(3000);
                        urlConn.setDoInput(true);
                        urlConn.setDoOutput(true);
                        urlConn.setRequestMethod("POST");
                        urlConn.setUseCaches(true);
                        urlConn.setRequestProperty("Content_Type", "application/json");
                        urlConn.setRequestProperty("CharSet", "utf-8");

                        urlConn.connect();
                        Log.d("start", "begin");

                        //                DataOutputStream dop = new DataOutputStream(urlConn.getOutputStream());
                        OutputStream out = urlConn.getOutputStream();
                        BufferedWriter dop = new BufferedWriter(new OutputStreamWriter(out));

                        //                dop.writeBytes("json=" + content);
                        dop.write(content);
                        dop.flush();
                        out.close();
                        dop.close();

                            /*//测试用
                            BufferedReader bf = new BufferedReader(new InputStreamReader(urlConn.getInputStream()));
                            String res = "";
                            String readLine = null;
                            while((readLine = bf.readLine()) != null) {
                                res += readLine;
                            }
//                            bf.close();
//                            Log.i("log_in",("---------------------------------------------------------\n"+res));
//                            urlConn.disconnect();
                            //到此为止*/

                        //                InputStream is = urlConn.getInputStream();
                        //                urlConn.disconnect();

                        //                byte[] responseBody = getHttpResponseBody.GetHttpResponseBody(is);
                        //                JSONObject ret = new JSONObject(new String(responseBody));
                        //                int status = ret.getInt("login_status");
                        //
                        //                if(status == 1) {
                        //                    Intent intent = new Intent(MainActivity.this,HomePageActivity.class);
                        //                    Bundle bundle = new Bundle();
                        //                    bundle.putInt("stuId",Integer.valueOf(stuId.getText().toString()));
                        //                    bundle.putString("nickName",ret.getString("nickName"));
                        //                    bundle.putString("token",ret.getString("token"));
                        //                    intent.putExtras(bundle);
                        //                    startActivity(intent);
                        //                }
                        //                else if(status == 0) {
                        //                    new AlertDialog.Builder(MainActivity.this)
                        //                            .setMessage("登录失败，学号或密码错误")
                        //                            .setPositiveButton("确定",null)
                        //                            .show();
                        //                }

                        if (urlConn.getResponseCode() == HttpURLConnection.HTTP_OK) {
                            InputStream in = urlConn.getInputStream();
                            BufferedReader br = new BufferedReader(new InputStreamReader(in));
                            String str = null;
                            StringBuilder buffer = new StringBuilder();
                            if ((str = br.readLine()) != null) {
                                buffer.append(str);
                            }
                            in.close();
                            br.close();

                            JSONObject rjson = new JSONObject(buffer.toString());
                            Log.d("response", "rjson = " + rjson);
                            Log.d("note", "返回成功");
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        assert urlConn != null;
                        urlConn.disconnect();
                    }
                    return null;
                }


            }.execute();
        }
